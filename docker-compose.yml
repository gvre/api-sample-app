version: "3.1"
services:
  db:
    hostname: db
    image: postgres:13-alpine
    volumes:
      - pgdata:/pgdata
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - PGDATA=pgdata
    ports:
      - "127.0.0.1:${PGPORT}:5432"

  app:
    hostname: app
    build: .
    volumes:
      - .:/app
      - gomodules:/go/pkg/mod
    env_file:
      - .env
    ports:
      - "127.0.0.1:${APP_PORT}:8080"
    depends_on:
      - db

  debug:
    hostname: debug
    build:
      context: .
      dockerfile: Dockerfile.debug
    volumes:
      - .:/app
      - gomodules:/go/pkg/mod
    env_file:
      - .env
    ports:
      - "127.0.0.1:${APP_PORT}:8080"
      - "127.0.0.1:${APP_DEBUG_PORT}:40000"
    depends_on:
      - db

  test:
    image: golang:1.16-buster # -race flag need glibc (see https://github.com/golang/go/issues/14481)
    working_dir: /app
    volumes:
      - .:/app
      - gomodules:/go/pkg/mod
    env_file:
      - .env
    depends_on:
      - db

  migrate:
    build: ./docker/migrate
    volumes:
      - ./migrations:/migrations
    env_file:
      - .env
    depends_on:
      - db

  openapi_editor:
    image: swaggerapi/swagger-editor
    volumes:
      - ./cmd/rest/spec/openapi.yaml:/tmp/openapi.yaml
    environment:
      - SWAGGER_FILE=/tmp/openapi.yaml
    ports:
      - "127.0.0.1:18081:8080"

volumes:
  pgdata:
  gomodules:
